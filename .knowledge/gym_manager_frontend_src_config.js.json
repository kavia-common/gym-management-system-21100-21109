{"is_source_file": true, "format": "JavaScript", "description": "This file is a JavaScript module for centralized configuration in a React-based frontend application. It provides functions to retrieve environment variables, parse feature flags, and exposes a configuration object used throughout the app.", "external_files": ["process.env"], "external_methods": ["process.env"], "published": ["getEnvVar", "getApiBaseUrl", "getUseMocks", "getFeatureFlags", "config"], "classes": [], "methods": [{"name": "getEnvVar(name, fallback = undefined)", "description": "Retrieve an environment variable with optional fallback, ensuring string return or fallback.", "scope": "", "scopeKind": ""}, {"name": "getApiBaseUrl()", "description": "Returns normalized API base URL without trailing slash, from REACT_APP_API_BASE_URL.", "scope": "", "scopeKind": ""}, {"name": "getUseMocks()", "description": "Returns boolean flag indicating if mock mode is enabled (REACT_APP_USE_MOCKS === 'true').", "scope": "", "scopeKind": ""}, {"name": "getFeatureFlags()", "description": "Returns a plain object parsed from REACT_APP_FEATURE_FLAGS (JSON string), or {} on failure.", "scope": "", "scopeKind": ""}], "calls": ["getEnvVar", "getEnvVar", "getEnvVar", "JSON.parse"], "search-terms": ["config", "environment variables", "feature flags", "API base URL", "mock mode"], "state": 2, "file_id": 51, "knowledge_revision": 129, "git_revision": "", "ctags": [{"_type": "tag", "name": "apiBaseUrl", "path": "/home/kavia/workspace/code-generation/gym-management-system-21100-21109/gym_manager_frontend/src/config.js", "pattern": "/^  apiBaseUrl: getApiBaseUrl(),$/", "language": "JavaScript", "kind": "property", "scope": "config", "scopeKind": "class"}, {"_type": "tag", "name": "config", "path": "/home/kavia/workspace/code-generation/gym-management-system-21100-21109/gym_manager_frontend/src/config.js", "pattern": "/^export const config = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "featureFlags", "path": "/home/kavia/workspace/code-generation/gym-management-system-21100-21109/gym_manager_frontend/src/config.js", "pattern": "/^  featureFlags: getFeatureFlags(),$/", "language": "JavaScript", "kind": "property", "scope": "config", "scopeKind": "class"}, {"_type": "tag", "name": "getApiBaseUrl", "path": "/home/kavia/workspace/code-generation/gym-management-system-21100-21109/gym_manager_frontend/src/config.js", "pattern": "/^export function getApiBaseUrl() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "getEnvVar", "path": "/home/kavia/workspace/code-generation/gym-management-system-21100-21109/gym_manager_frontend/src/config.js", "pattern": "/^export function getEnvVar(name, fallback = undefined) {$/", "language": "JavaScript", "kind": "function", "signature": "(name, fallback = undefined)"}, {"_type": "tag", "name": "getFeatureFlags", "path": "/home/kavia/workspace/code-generation/gym-management-system-21100-21109/gym_manager_frontend/src/config.js", "pattern": "/^export function getFeatureFlags() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "getUseMocks", "path": "/home/kavia/workspace/code-generation/gym-management-system-21100-21109/gym_manager_frontend/src/config.js", "pattern": "/^export function getUseMocks() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "useMocks", "path": "/home/kavia/workspace/code-generation/gym-management-system-21100-21109/gym_manager_frontend/src/config.js", "pattern": "/^  useMocks: getUseMocks(),$/", "language": "JavaScript", "kind": "property", "scope": "config", "scopeKind": "class"}], "hash": "239acb108ee95057ede278bdd21a462f", "format-version": 4, "code-base-name": "gym_manager_frontend", "filename": "gym_manager_frontend/src/config.js", "fields": [{"name": "apiBaseUrl: getApiBaseUrl(),", "scope": "config", "scopeKind": "class", "description": "unavailable"}, {"name": "featureFlags: getFeatureFlags(),", "scope": "config", "scopeKind": "class", "description": "unavailable"}, {"name": "useMocks: getUseMocks(),", "scope": "config", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"129": ""}]}