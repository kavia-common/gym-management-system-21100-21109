{"is_source_file": true, "format": "JavaScript/React JSX", "description": "A React component for managing trainers in a gym management system. Provides CRUD operations, pagination, and approval workflows for trainer accounts, including handling pending approvals and trainer list management.", "external_files": ["../../components/ui/Card", "../../components/ui/Button", "../../components/ui/Modal", "../../components/shared/SimpleTable", "../../components/shared/EntityForm", "../../services/supabase"], "external_methods": ["trainersService.list", "trainersService.create", "trainersService.update", "trainersService.remove", "profilesService.listTrainersByStatus", "profilesService.approveTrainer", "profilesService.rejectTrainer"], "published": ["OwnerTrainers"], "classes": [], "methods": [{"name": "load", "description": "Loads the list of trainers with pagination, depending on the mock mode setting."}, {"name": "loadPending", "description": "Fetches the list of trainers pending approval."}, {"name": "onResetForm", "description": "Resets the trainer form to initial state."}, {"name": "onCreate", "description": "Creates a new trainer entry, handling optimistic UI updates."}, {"name": "onUpdate", "description": "Updates an existing trainer's details."}, {"name": "onDelete", "description": "Deletes a trainer entry."}, {"name": "onApprove", "description": "Approves a trainer pending approval."}, {"name": "onReject", "description": "Rejects a trainer pending approval."}, {"name": "OwnerTrainers()", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["trainersService.list", "trainersService.create", "trainersService.update", "trainersService.remove", "profilesService.listTrainersByStatus", "profilesService.approveTrainer", "profilesService.rejectTrainer"], "search-terms": ["Trainer Management React", "OwnerTrainer CRUD", "Trainer Pending Approval", "React useState pagination", "Supabase trainer service"], "state": 2, "file_id": 41, "knowledge_revision": 277, "git_revision": "4d9a9378add7dda953f55822a1816f4566753b54", "revision_history": [{"103": ""}, {"133": "d46ebdd48d846b4d0eee5005e7f4d0387fca89bd"}, {"247": "09e5b506ed8ba82189573ac92ae244dd6b904fef"}, {"277": "4d9a9378add7dda953f55822a1816f4566753b54"}], "ctags": [{"_type": "tag", "name": "OwnerTrainers", "path": "/home/kavia/workspace/code-generation/gym-management-system-21100-21109/gym_manager_frontend/src/pages/owner/Trainers.jsx", "pattern": "/^export default function OwnerTrainers() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/gym-management-system-21100-21109/gym_manager_frontend/src/pages/owner/Trainers.jsx", "pattern": "/^    const optimistic = { id: tempId, ...form };$/", "language": "JavaScript", "kind": "property", "scope": "OwnerTrainers.optimistic", "scopeKind": "class"}, {"_type": "tag", "name": "next", "path": "/home/kavia/workspace/code-generation/gym-management-system-21100-21109/gym_manager_frontend/src/pages/owner/Trainers.jsx", "pattern": "/^          <Button variant=\"secondary\" disabled={loading || !hasNext} onClick={async () => { cons/", "language": "JavaScript", "kind": "constant", "scope": "action", "scopeKind": "class"}, {"_type": "tag", "name": "next", "path": "/home/kavia/workspace/code-generation/gym-management-system-21100-21109/gym_manager_frontend/src/pages/owner/Trainers.jsx", "pattern": "/^          <Button variant=\"secondary\" disabled={loading || page <= 1} onClick={async () => { con/", "language": "JavaScript", "kind": "constant", "scope": "action", "scopeKind": "class"}, {"_type": "tag", "name": "optimistic", "path": "/home/kavia/workspace/code-generation/gym-management-system-21100-21109/gym_manager_frontend/src/pages/owner/Trainers.jsx", "pattern": "/^    const optimistic = { id: tempId, ...form };$/", "language": "JavaScript", "kind": "class", "scope": "OwnerTrainers", "scopeKind": "class"}], "hash": "de7b9dc831ca50039681e352fc6db484", "format-version": 4, "code-base-name": "gym_manager_frontend", "filename": "gym_manager_frontend/src/pages/owner/Trainers.jsx", "fields": [{"name": "const optimistic = { id: tempId, ...form };", "scope": "OwnerTrainers.optimistic", "scopeKind": "class", "description": "unavailable"}]}