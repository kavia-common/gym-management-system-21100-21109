{"is_source_file": true, "format": "JavaScript", "description": "This source file is the main entry point for a React-based front-end application. It initializes application state, sets up authentication synchronization with Supabase, and conditionally loads mock service workers for development or testing purposes. It then renders the root React component into the DOM.", "external_files": ["./index.css", "./App", "./state/store", "./config", "./state/slices/authSlice", "./context/AuthContext", "./lib/supabaseClient", "./mocks/browser"], "external_methods": ["ReactDOM.createRoot", "supabase.auth.getSession", "supabase.auth.onAuthStateChange", "store.dispatch", "React.StrictMode", "BrowserRouter", "<App />", "AuthProvider"], "published": ["bootstrap"], "classes": [], "methods": [{"name": "enableMocksIfNeeded()", "description": "Asynchronously checks environment variables and configuration to conditionally initialize mock service worker for testing.", "scope": "", "scopeKind": ""}, {"name": "hydrateAuthFromSupabase()", "description": "Fetches the current user session from Supabase, dispatches login actions if session exists, and subscribes to authentication state changes to keep app state synchronized.", "scope": "", "scopeKind": ""}, {"name": "bootstrap()", "description": "Main async function that initializes mocks, hydates authentication, and renders the React application into the DOM.", "scope": "", "scopeKind": ""}], "calls": ["import React from 'react'", "import ReactDOM from 'react-dom/client'", "supabase.auth.getSession", "supabase.auth.onAuthStateChange", "store.dispatch", "ReactDOM.createRoot", "root.render"], "search-terms": ["index.js", "React.StrictMode", "supabase", "hydrateAuthFromSupabase", "enableMocksIfNeeded", "application bootstrap", "mock service worker", "ReactDOM create root", "Redux store", "Authentication synchronization"], "state": 2, "file_id": 8, "knowledge_revision": 419, "git_revision": "0aa93613864ea3491da12a2175f8c9559dcffb53", "revision_history": [{"24": "ede44988278b48fee236ed0f2d5285351ab6573f"}, {"46": "6e3299d1b941d1f80275445cce7beac98c731ef3"}, {"78": "6e3299d1b941d1f80275445cce7beac98c731ef3"}, {"149": "c2e796dae02d239fd022888ccacd145847b1c50d"}, {"218": "a00785d2f69e61879e5e3190b1e4550fa1c564ef"}, {"219": "a00785d2f69e61879e5e3190b1e4550fa1c564ef"}, {"240": "a96e3647804748d1b3e791ab67efe3e4fda6d1ec"}, {"267": "6f9005f79a630b4a6078cf4f2b74f0c719456886"}, {"318": "36ad5941800429142841f09e4cd9f4ff736c1157"}, {"322": "36ad5941800429142841f09e4cd9f4ff736c1157"}, {"323": "36ad5941800429142841f09e4cd9f4ff736c1157"}, {"407": "062840a2f1f7c726a34c437c3505b8473813789d"}, {"419": "0aa93613864ea3491da12a2175f8c9559dcffb53"}], "ctags": [{"_type": "tag", "name": "bootstrap", "path": "/home/kavia/workspace/code-generation/gym-management-system-21100-21109/gym_manager_frontend/src/index.js", "pattern": "/^async function bootstrap() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "enableMocksIfNeeded", "path": "/home/kavia/workspace/code-generation/gym-management-system-21100-21109/gym_manager_frontend/src/index.js", "pattern": "/^async function enableMocksIfNeeded() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "hydrateAuthFromSupabase", "path": "/home/kavia/workspace/code-generation/gym-management-system-21100-21109/gym_manager_frontend/src/index.js", "pattern": "/^async function hydrateAuthFromSupabase() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}], "hash": "8140b9a5149c53fa771e308f226c8015", "format-version": 4, "code-base-name": "gym_manager_frontend", "filename": "gym_manager_frontend/src/index.js"}